{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","sortType","setSortType","isReversed","setDirection","sortedGoods","sort","good1","good2","localeCompare","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"+NAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAgCC,mBAAS,QAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAmCF,oBAAS,GAA5C,mBAAOG,EAAP,KAAmBC,EAAnB,KAmBMC,EAAc,UAAIP,GAAiBQ,MAAK,SAACC,EAAOC,GACpD,OAAQP,GACN,IAAK,WACH,OAAOM,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAQb,OAJIP,GACFE,EAAYM,UAIZ,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAiC,aAAbX,GAA2B,YACxDa,QA/Be,WACrBZ,EAAY,aA2BR,iCAQA,wBACEW,KAAK,SACLD,UAAS,4BAAoC,WAAbX,GAAyB,YACzDa,QAnCa,WACnBZ,EAAY,WA+BR,4BAQA,wBACEW,KAAK,SACLD,UAAS,6BAAwBT,GAAc,WAAtC,KACTW,QAnDQ,WACdV,GAAcD,IA+CV,sBAQe,SAAbF,GACGE,IAED,wBACEU,KAAK,SACLD,UAAU,4BACVE,QAnEE,WACZZ,EAAY,QACZE,GAAa,IA8DL,sBAUN,6BACE,6BACGC,EAAYU,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC/FpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0ef2b20e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState('none');\n  const [isReversed, setDirection] = useState(false);\n\n  const reset = () => {\n    setSortType('none');\n    setDirection(false);\n  };\n\n  const reverse = () => {\n    setDirection(!isReversed);\n  };\n\n  const sortByAlphabet = () => {\n    setSortType('alphabet');\n  };\n\n  const sortByLength = () => {\n    setSortType('length');\n  };\n\n  const sortedGoods = [...goodsFromServer].sort((good1, good2) => {\n    switch (sortType) {\n      case 'alphabet':\n        return good1.localeCompare(good2);\n\n      case 'length':\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== 'alphabet' && 'is-light'}`}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== 'length' && 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'} `}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 'none'\n          || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {sortedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}