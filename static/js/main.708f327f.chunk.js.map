{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setDirection","sortedGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,kDAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAmCH,oBAAS,GAA5C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EAAc,UAAIR,GAAiBS,MAAK,SAACC,EAAOC,GACpD,OAAQP,GACN,KAAKL,EAASa,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKZ,EAASe,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAQb,OAJIT,GACFE,EAAYQ,UAIZ,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBb,IAAaL,EAASa,UAAY,YAC/DO,QA/BqB,WAC3Bd,EAAYN,EAASa,WA2BjB,iCAQA,wBACEM,KAAK,SACLD,UAAS,4BAAuBb,IAAaL,EAASe,QAAU,YAChEK,QAnCqB,WAC3Bd,EAAYN,EAASe,SA+BjB,4BAQA,wBACEI,KAAK,SACLD,UAAS,6BAAwBX,GAAc,WAAtC,KACTa,QAnDkB,WACxBZ,GAAcD,IA+CV,sBAQEF,IAAaL,EAASI,MACnBG,IAED,wBACEY,KAAK,SACLD,UAAU,4BACVE,QAnEI,WACdd,EAAYN,EAASI,MACrBI,GAAa,IA8DL,sBAUN,6BACE,6BACGC,EAAYY,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCrGpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.708f327f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setDirection] = useState(false);\n\n  const onReset = () => {\n    setSortType(SortType.NONE);\n    setDirection(false);\n  };\n\n  const onToggleDirection = () => {\n    setDirection(!isReversed);\n  };\n\n  const onSortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const onSortByStringLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const sortedGoods = [...goodsFromServer].sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n          onClick={onSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={onSortByStringLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'} `}\n          onClick={onToggleDirection}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE\n          || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={onReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {sortedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}